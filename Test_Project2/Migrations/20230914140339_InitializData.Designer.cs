// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Test_Project2.Data_Contest;

#nullable disable

namespace Test_Project2.Migrations
{
    [DbContext(typeof(Book_Shop_DataContext))]
    [Migration("20230914140339_InitializData")]
    partial class InitializData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Test_Project2.Models.Books_Model", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Authors_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Book_Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Books_File")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Books_Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Books_Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cover_Image_Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("Published_Date")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Books_Table");
                });

            modelBuilder.Entity("Test_Project2.Models.Cart_Model", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Book_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Book_Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created_On")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Customer_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Total_Amount")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cart_Table");
                });

            modelBuilder.Entity("Test_Project2.Models.Customer_Details", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address_Line_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address_Line_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profile_Picture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customer_Details_Table");
                });

            modelBuilder.Entity("Test_Project2.Models.Order_Model", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Book_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Cart_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created_On")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Customer_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Order_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Total_Amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Total_Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Order_Table");
                });

            modelBuilder.Entity("Test_Project2.Models.UserModel.General_User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LockOutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool?>("LockOutEndEnabled")
                        .HasColumnType("bit");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PhoneNoConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneVerificationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PhoneVerifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<string>("SurName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerificationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VerifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("General_User");
                });

            modelBuilder.Entity("Test_Project2.Models.UserModel.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Test_Project2.Models.UserModel.User_Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GeneralUsersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GeneralUsersId");

                    b.HasIndex("RoleId");

                    b.ToTable("User_Roles");
                });

            modelBuilder.Entity("Test_Project2.Models.UserModel.User_Roles", b =>
                {
                    b.HasOne("Test_Project2.Models.UserModel.General_User", "GeneralUsers")
                        .WithMany("User_Roles")
                        .HasForeignKey("GeneralUsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Test_Project2.Models.UserModel.Roles", "Roles")
                        .WithMany("User_Roles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GeneralUsers");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Test_Project2.Models.UserModel.General_User", b =>
                {
                    b.Navigation("User_Roles");
                });

            modelBuilder.Entity("Test_Project2.Models.UserModel.Roles", b =>
                {
                    b.Navigation("User_Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
